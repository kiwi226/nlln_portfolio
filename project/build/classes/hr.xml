<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hrNS">
	<!-- //사번, 부서번호, 비밀번호, 이름, 이메일, 주소, 전화번호, 입사일, 퇴사여부 -->
	<select id="selectEmpCountWithYear" parameterType="string" resultType="int">
		select count(emp_no) from emp where emp_no like #{year}||'%'
	</select>
	
	<!-- 로그인 시에 세션에 올릴 유저 data -->
	<select id="selectEmp" parameterType="string" resultType="Emp">
		select * from emp where emp_no = #{emp_no}
	</select>
	<select id="selectHr" parameterType="string" resultType="Hr">
		select * from v_hr where emp_no = #{emp_no}
	</select>
	
	<!-- 사원 목록 조회(with 부서명) -->
	<select id="selectHrList" parameterType="map" resultType="Hr">
		select * from v_hr where rn between #{firstRow} and #{lastRow}
	</select>
	
	
	<!-- 총 사원 수 -->
	<select id="selectEmpCount" resultType="int">
		select count(emp_no) from emp
	</select>
	
	<!-- 검색 조건에 맞는 사원 검색 -->
	<select id="selectHrSearchList" parameterType="map" resultType="Hr">
		select *
		from (
			select rownum rn, h.* 
			from hr h 
			where ${searchField} like '%'||#{keyword}||'%'
		) 
		where rn between #{firstRow} and #{lastRow}
	</select>
	
	<!-- 검색 조건에 맞는 사원 수 -->
	<select id="countHrSearchList" parameterType="map" resultType="int">
		select count(*)
		from (
			select rownum rn, h.* 
			from hr h 
			where ${searchField} like '%'||#{keyword}||'%'
		) 
	</select>
	
	<!-- 부서리스트 조회 -->
	<select id="selectDeptList" resultType="Dept">
		select * from dept order by dept_no
	</select>
	
	<!-- 사원 등록 -->
	<!-- //사번, 부서번호, 비밀번호, 이름, 이메일, 우편번호, 주소, 상세주소, 전화번호, 입사일, 퇴사여부 -->
	<insert id="insertEmp" parameterType="Emp" >
		insert into emp values (#{emp_no}, #{dept_no}, '0000', #{emp_name}, #{emp_email}, #{emp_addr_no}, #{emp_addr}, #{emp_addr_detail}, #{emp_tel}, #{hiredate}, 'n')
	</insert>
	
	<update id="updateEmp" parameterType="Emp" >
		update emp 
		set 
			dept_no = #{dept_no}, 
			password = #{password}, 
			emp_name = #{emp_name}, 
			emp_email = #{emp_email},
			emp_addr_no = #{emp_addr_no},
			emp_addr = #{emp_addr},
			emp_addr_detail = #{emp_addr_detail},
			emp_tel = #{emp_tel},
			hiredate = #{hiredate}
		where
			emp_no = #{emp_no}
	</update>
</mapper>

<!-- <resultMap id="empResultMap" type="Emp">
		<id 	column="emp_no" 		property="emp_no" />
		<result column="password" 		property="password" />
		<result column="emp_name" 		property="empName" />
		<result column="emp_email" 		property="empEmail" />
		<result column="emp_address" 	property="empAddress" />
		<result column="emp_tel" 		property="empTel" />
		<result column="hiredate" 		property="hiredate" />
		<result column="resign" 		property="resign" />
		<association property="dept" javaType="Dept" resultMap="deptResultMap" />
	</resultMap>
	<resultMap id="deptResultMap" type="Dept">
		<id		column="dept_no"		property="deptNo"/>
		<result column="dept_name"		property="deptName"/>
	</resultMap>
	<select id="selectEmp" parameterType="string" resultMap="empResultMap">
		SELECT
			e.emp_no,
			e.dept_no,
			e.password,
			e.emp_name,
			e.emp_email,
			e.emp_address,
			e.emp_tel,
			e.hiredate,
			e.resign,
			d.dept_no,
			d.dept_name
		FROM emp e
		JOIN dept d
		ON e.dept_no = d.dept_no
		WHERE emp_no = #{empNo}
	</select>
	<select id="selectEmpList" resultMap="empResultMap">
		SELECT
			e.emp_no,
			e.dept_no,
			e.password,
			e.emp_name,
			e.emp_email,
			e.emp_address,
			e.emp_tel,
			e.hiredate,
			e.resign,
			d.dept_no,
			d.dept_name
		FROM emp e
		JOIN dept d
		ON e.dept_no = d.dept_no
		ORDER BY e.emp_no
	</select>
	<select id="selectDept" parameterType="string" resultMap="deptResultMap">
		select * from dept where dept_no = #{deptNo}
	</select>
	<select id="selectEmpCount" resultType="_int">
		select count(emp_no) from emp
	</select> -->